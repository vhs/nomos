#!/usr/bin/env php
<?php
if (preg_match('/tools$/', __DIR__)) {
    chdir(realpath(dirname(__DIR__)));
}

require_once 'conf/config.ini.php';
require_once 'app/include.php';

function generateFieldDefinition($className, $column) {
    $baseType = strtolower(str_replace('vhs\database\types\Type', '', get_class($column->type)));

    $field = [
        'name' => $column->name,
        'type' => $baseType
    ];

    switch ($field['type']) {
        case 'datetime':
        case 'text':
            $field['type'] = 'string';

            break;
        case 'enum':
            $enumName = sprintf('%s%sEnum', $className, ucfirst($column->name));

            $field['enum'] = [
                'name' => $enumName,
                'values' => $column->type->values
            ];

            break;
        default:
            break;
    }

    return $field;
}

function generateDTOFile(string $dtoFile, array $content): void {
    printf("Writing %s...\n", $dtoFile);
    $output = [];

    $output[] = '<?php';
    $output[] = '';
    $output[] = '// WARNING:';
    $output[] = '// This file is automatically generated.';
    $output[] = '// Do not edit manually.';
    $output[] = '';
    $output[] = 'namespace app\dto;';
    $output[] = '';
    $output[] = '/** @typescript */';

    file_put_contents($dtoFile, implode("\n", array_merge($output, $content)));
}

foreach (glob('app/domain/*.php') as $filename) {
    require_once $filename;
}

$domains = [];

foreach (get_declared_classes() as $class) {
    if (is_subclass_of($class, '\\vhs\\domain\\Domain')) {
        $className = str_replace('app\\domain\\', '', $class);
        $domains[$className] = [];

        foreach ($class::Schema()->Table()->columns->all() as $column) {
            $domains[$className][] = generateFieldDefinition($className, $column);
        }
    }
}

foreach ($domains as $className => $fields) {
    printf("Generating %s...\n", $className);

    $dtoFile = sprintf('app/dto/%s.php', $className);

    $classContent = [];

    $classContent[] = sprintf('class %s {', $className);

    foreach ($fields as $field) {
        if ($field['type'] === 'enum') {
            $enumFile = sprintf('app/dto/%s.php', $field['enum']['name']);

            $enumContent = [];

            $enumContent[] = sprintf('enum %s {', $field['enum']['name']);

            foreach ($field['enum']['values'] as $value) {
                $enumContent[] = sprintf('    case %s;', $value);
            }

            $enumContent[] = '}';

            generateDTOFile($enumFile, $enumContent);

            $classContent[] = sprintf('    public %s $%s;', $field['enum']['name'], $field['name']);
        }

        if ($field['type'] !== 'enum') {
            $classContent[] = sprintf('    public %s $%s;', $field['type'], $field['name']);
        }

        $classContent[] = '';
    }

    $classContent[] = sprintf("    public function __construct(\app\domain\%s $%s) {", $className, lcfirst($className));

    foreach ($fields as $field) {
        if ($field['type'] === 'enum') {
            $classContent[] = sprintf(
                '        $this->%s = %s::tryFrom($%s->%s);',
                $field['name'],
                $field['enum']['name'],
                lcfirst($className),
                $field['name']
            );
        } else {
            $classContent[] = sprintf('        $this->%s = $%s->%s;', $field['name'], lcfirst($className), $field['name']);
        }
    }
    $classContent[] = sprintf('    }');

    $classContent[] = '}';
    $classContent[] = '';

    generateDTOFile($dtoFile, $classContent);
}

