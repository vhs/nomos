version: 2.1

commands:
  restore_repo:
    description: "Restore repo from cache"
    steps:
      - restore_cache:
          working_directory: ~/nomos/
          keys:
            - v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - attach_workspace:
          at: /tmp/workspace

  load_layers:
    description: "Load Docker image layer cache"
    steps:
      - restore_cache:
          keys:
            - v1-layers-{{ checksum "Dockerfile" }}-{{ checksum "package.json" }}
          paths:
            - /caches/docker.layers.tar
      - run: 
          name: Load Docker image layer cache
          command: |
            set +o pipefail
            docker load -i /caches/docker.layers.tar | true

  build_image:
    description: "Build Docker image"
    steps:
      - run:
          name: Build Docker image
          command: |
            NAME=$(npm run env | sed -n 's/npm_package_name=//p')
            npm run build -- --cache-from=vanhack/${NAME}

  save_layers:
    description: "Save Docker image layer cache"
    steps:
      - run:
          name: Save Docker image layer cache
          command: |
            mkdir -p /caches
            NAME=$(npm run env | sed -n 's/npm_package_name=//p')
            docker save -o /caches/docker.layers.tar vanhack/${NAME}
      - save_cache:
          key: v1-layers-{{ checksum "Dockerfile" }}-{{ checksum "package.json" }}
          paths:
            - /caches/docker.layers.tar

  save_image_to_workspace:
    description: "Save Docker image to workspace"
    parameters:
      component:
        type: string
    steps:
      - run:
          name: Save Docker image to workspace
          command: |
            docker save -o /tmp/workspace/<< parameters.component >>.tar vanhack/<< parameters.component >>
      - persist_to_workspace:
          root: /tmp/workspace
          paths: << parameters.component >>.tar
          
  build_component:
    description: "Build component"
    parameters:
      component:
        type: string
    steps:
      - setup_remote_docker
      - restore_repo
      - set_build_version
      - load_layers
      - build_image
      - save_layers
      - save_image_to_workspace:
          component: << parameters.component >>

  test_component:
    description: "Test component"
    parameters:
      component:
        type: string
    steps:
      - setup_remote_docker
      - restore_repo
      - load_image_from_workspace:
          component: << parameters.component >>
      - set_build_version
      - run:
          name: Test Docker image
          command: |
            npm run test:ci

  push_component:
    description: "Push component"
    parameters:
      component:
        type: string
    steps:
      - setup_remote_docker
      - restore_repo
      - load_image_from_workspace:
          component: << parameters.component >>
      - set_build_version
      - run:
          name: Push Docker image
          command: |
            docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
            npm run push

  load_image_from_workspace:
    description: "Load Docker iamge from workspace"
    parameters:
      component:
        type: string
    steps:
      - run:
          name: Load Docker image
          command: |
            docker load -i /tmp/workspace/<< parameters.component >>.tar

  set_build_version:
    description: "Set the build version for the package"
    steps:
      - run:
          name: Set build version
          command: |
            BUILD_NUM=$(cat /tmp/workspace/buildnum.version)
            sed -ie s/.0-dev/${BUILD_NUM}/ package.json

jobs:
  checkout:
    docker:
      - image: vanhack/nomos.build:1.0.0.0-dev
    working_directory: ~/nomos
    steps:
      - checkout
      - save_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/nomos
      - run:
          name: Set build number version
          command: |
            echo -n ".${CIRCLE_BUILD_NUM}" > buildnum.version
      - persist_to_workspace:
          root: ~/nomos
          paths: buildnum.version

# nomos.adminvpn
  build-adminvpn:
    docker:
      - image: vanhack/nomos.build:1.0.0.0-dev
    working_directory: ~/nomos/adminvpn
    steps:
      - build_component:
          component: nomos.adminvpn

  test-adminvpn:
    docker:
      - image: vanhack/nomos.build:1.0.0.0-dev
    working_directory: ~/nomos/adminvpn
    steps:
      - test_component:
          component: nomos.adminvpn

  push-adminvpn:
    docker:
      - image: vanhack/nomos.build:1.0.0.0-dev
    working_directory: ~/nomos/adminvpn
    steps:
      - push_component:
          component: nomos.adminvpn
# end nomos.adminvpn

# nomos.core
  build-core:
    docker:
      - image: vanhack/nomos.build:1.0.0.0-dev
    working_directory: ~/nomos/core
    steps:
      - build_component:
          component: nomos.core

  test-core:
    docker:
      - image: vanhack/nomos.build:1.0.0.0-dev
    working_directory: ~/nomos/core
    steps:
      - test_component:
          component: nomos.core

  push-core:
    docker:
      - image: vanhack/nomos.build:1.0.0.0-dev
    working_directory: ~/nomos/core
    steps:
      - push_component:
          component: nomos.core
# end nomos.core

# nomos.database.manager
  build-database-manager:
    docker:
      - image: vanhack/nomos.build:1.0.0.0-dev
    working_directory: ~/nomos/database/manager
    steps:
      - build_component:
          component: nomos.database.manager

  test-database-manager:
    docker:
      - image: vanhack/nomos.build:1.0.0.0-dev
    working_directory: ~/nomos/database/manager
    steps:
      - test_component:
          component: nomos.database.manager

  push-database-manager:
    docker:
      - image: vanhack/nomos.build:1.0.0.0-dev
    working_directory: ~/nomos/database/manager
    steps:
      - push_component:
          component: nomos.database.manager
# end nomos.database.manager

# nomos.database.master
  build-database-master:
    docker:
      - image: vanhack/nomos.build:1.0.0.0-dev
    working_directory: ~/nomos/database/master
    steps:
      - build_component:
          component: nomos.database.master

  test-database-master:
    docker:
      - image: vanhack/nomos.build:1.0.0.0-dev
    working_directory: ~/nomos/database/master
    steps:
      - test_component:
          component: nomos.database.master

  push-database-master:
    docker:
      - image: vanhack/nomos.build:1.0.0.0-dev
    working_directory: ~/nomos/database/master
    steps:
      - push_component:
          component: nomos.database.master
# end nomos.database.master

# nomos.database.replica
  build-database-replica:
    docker:
      - image: vanhack/nomos.build:1.0.0.0-dev
    working_directory: ~/nomos/database/replica
    steps:
      - build_component:
          component: nomos.database.replica

  test-database-replica:
    docker:
      - image: vanhack/nomos.build:1.0.0.0-dev
    working_directory: ~/nomos/database/replica
    steps:
      - test_component:
          component: nomos.database.replica

  push-database-replica:
    docker:
      - image: vanhack/nomos.build:1.0.0.0-dev
    working_directory: ~/nomos/database/replica
    steps:
      - push_component:
          component: nomos.database.replica
# end nomos.database.replica

# nomos.proxy
  build-proxy:
    docker:
      - image: vanhack/nomos.build:1.0.0.0-dev
    working_directory: ~/nomos/proxy
    steps:
      - build_component:
          component: nomos.proxy

  test-proxy:
    docker:
      - image: vanhack/nomos.build:1.0.0.0-dev
    working_directory: ~/nomos/proxy
    steps:
      - test_component:
          component: nomos.proxy

  push-proxy:
    docker:
      - image: vanhack/nomos.build:1.0.0.0-dev
    working_directory: ~/nomos/proxy
    steps:
      - push_component:
          component: nomos.proxy
# end nomos.proxy

# nomos.gateway
  build-gateway:
    docker:
      - image: vanhack/nomos.build:1.0.0.0-dev
    working_directory: ~/nomos/gateway
    steps:
      - build_component:
          component: nomos.gateway

  test-gateway:
    docker:
      - image: vanhack/nomos.build:1.0.0.0-dev
    working_directory: ~/nomos/gateway
    steps:
      - test_component:
          component: nomos.gateway

  push-gateway:
    docker:
      - image: vanhack/nomos.build:1.0.0.0-dev
    working_directory: ~/nomos/gateway
    steps:
      - push_component:
          component: nomos.gateway
# end nomos.gateway

# nomos.web
  build-web:
    docker:
      - image: vanhack/nomos.build:1.0.0.0-dev
    working_directory: ~/nomos/web
    steps:
      - build_component:
          component: nomos.web

  test-web:
    docker:
      - image: vanhack/nomos.build:1.0.0.0-dev
    working_directory: ~/nomos/web
    steps:
      - test_component:
          component: nomos.web

  push-web:
    docker:
      - image: vanhack/nomos.build:1.0.0.0-dev
    working_directory: ~/nomos/web
    steps:
      - push_component:
          component: nomos.web
# end nomos.web

# nomos.webhooker
  build-webhooker:
    docker:
      - image: vanhack/nomos.build:1.0.0.0-dev
    working_directory: ~/nomos/webhooker
    steps:
      - build_component:
          component: nomos.webhooker

  test-webhooker:
    docker:
      - image: vanhack/nomos.build:1.0.0.0-dev
    working_directory: ~/nomos/webhooker
    steps:
      - test_component:
          component: nomos.webhooker

  push-webhooker:
    docker:
      - image: vanhack/nomos.build:1.0.0.0-dev
    working_directory: ~/nomos/webhooker
    steps:
      - push_component:
          component: nomos.webhooker
# end nomos.webhooker
          
workflows:
  version: 2
  beard:
    jobs:
      - checkout
      # nomos.adminvpn
      - build-adminvpn:
          requires:
            - checkout
      - test-adminvpn:
          requires:
            - build-adminvpn
      - push-adminvpn:
          requires:
            - test-adminvpn
            - test-core
            - test-database-manager
            - test-database-master
            - test-database-replica
            - test-proxy
            - test-gateway
            - test-web
            - test-webhooker
          filters:
            branches:
              only: v2
      # nomos.core
      - build-core:
          requires:
            - checkout
      - test-core:
          requires:
            - build-core
      - push-core:
          requires:
            - test-adminvpn
            - test-core
            - test-database-manager
            - test-database-master
            - test-database-replica
            - test-proxy
            - test-gateway
            - test-web
            - test-webhooker
          filters:
            branches:
              only: v2
      # nomos.database.manager
      - build-database-manager:
          requires:
            - checkout
      - test-database-manager:
          requires:
            - build-database-manager
      - push-database-manager:
          requires:
            - test-adminvpn
            - test-core
            - test-database-manager
            - test-database-master
            - test-database-replica
            - test-proxy
            - test-gateway
            - test-web
            - test-webhooker
          filters:
            branches:
              only: v2
      # nomos.database.master
      - build-database-master:
          requires:
            - checkout
      - test-database-master:
          requires:
            - build-database-master
      - push-database-master:
          requires:
            - test-adminvpn
            - test-core
            - test-database-manager
            - test-database-master
            - test-database-replica
            - test-proxy
            - test-gateway
            - test-web
            - test-webhooker
          filters:
            branches:
              only: v2
      # nomos.database.replica
      - build-database-replica:
          requires:
            - checkout
      - test-database-replica:
          requires:
            - build-database-replica
      - push-database-replica:
          requires:
            - test-adminvpn
            - test-core
            - test-database-manager
            - test-database-master
            - test-database-replica
            - test-proxy
            - test-gateway
            - test-web
            - test-webhooker
          filters:
            branches:
              only: v2
      # nomos.proxy
      - build-proxy:
          requires:
            - checkout
      - test-proxy:
          requires:
            - build-proxy
      - push-proxy:
          requires:
            - test-adminvpn
            - test-core
            - test-database-manager
            - test-database-master
            - test-database-replica
            - test-proxy
            - test-gateway
            - test-web
            - test-webhooker
          filters:
            branches:
              only: v2
      # nomos.gateway
      - build-gateway:
          requires:
            - checkout
      - test-gateway:
          requires:
            - build-gateway
      - push-gateway:
          requires:
            - test-adminvpn
            - test-core
            - test-database-manager
            - test-database-master
            - test-database-replica
            - test-proxy
            - test-gateway
            - test-web
            - test-webhooker
          filters:
            branches:
              only: v2
      # nomos.web
      - build-web:
          requires:
            - checkout
      - test-web:
          requires:
            - build-web
      - push-web:
          requires:
            - test-adminvpn
            - test-core
            - test-database-manager
            - test-database-master
            - test-database-replica
            - test-proxy
            - test-gateway
            - test-web
            - test-webhooker
          filters:
            branches:
              only: v2
      # nomos.webhooker
      - build-webhooker:
          requires:
            - checkout
      - test-webhooker:
          requires:
            - build-webhooker
      - push-webhooker:
          requires:
            - test-adminvpn
            - test-core
            - test-database-manager
            - test-database-master
            - test-database-replica
            - test-proxy
            - test-gateway
            - test-web
            - test-webhooker
          filters:
            branches:
              only: v2
