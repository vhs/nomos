/* eslint-disable @typescript-eslint/naming-convention */
// This file was generated by generate-providers-types.sh on Wed Feb  5 22:40:42 UTC 2025.
// Do not change manually.

import type { BackendResult } from '@/types/custom'
import type {
    MetricServiceGetCreatedDatesResult,
    MetricServiceGetMembersResult,
    MetricServiceGetRevenueResult,
    NewMembersResult,
    Payments,
    TotalKeyHoldersResult,
    TotalMembersResult,
    User
} from '@/types/records'

export interface IMetricService2 {
    /**
     * @permission user
     *
     * @param {string} $start_range
     * @param {string} $end_range
     *
     * @throws {string}
     *
     * @returns {MetricServiceGetCreatedDatesResult}
     */
    GetCreatedDates: (start_range: string, end_range: string) => BackendResult<MetricServiceGetCreatedDatesResult>

    /**
     * @permission administrator
     *
     * @throws {string}
     *
     * @returns {Payments}
     */
    GetExceptionPayments: () => BackendResult<Payments>

    /**
     * @permission user
     *
     * @param {string} $start_range
     * @param {string} $end_range
     * @param {string} $group
     *
     * @throws {string}
     *
     * @returns {MetricServiceGetMembersResult}
     */
    GetMembers: (start_range: string, end_range: string, group: string) => BackendResult<MetricServiceGetMembersResult>

    /**
     * @permission user
     *
     * @param {string} $start_range string iso date in UTC, if empty is start of today
     * @param {string} $end_range   string iso date in UTC, if empty is end of today
     *
     * @throws {string}
     *
     * @returns {unknown}
     */
    GetNewKeyHolders: (start_range: string, end_range: string) => BackendResult<unknown>

    /**
     * @permission user
     *
     * @param {string} $start_range string iso date in UTC, if empty is start of today
     * @param {string} $end_range   string iso date in UTC, if empty is end of today
     *
     * @throws {string}
     *
     * @returns {NewMembersResult}
     */
    GetNewMembers: (start_range: string, end_range: string) => BackendResult<NewMembersResult>

    /**
     * @permission administrator
     *
     * @throws {string}
     *
     * @returns {User[]}
     */
    GetPendingAccounts: () => BackendResult<User[]>

    /**
     * @permission user
     *
     * @param {string} $start_range string iso date in UTC, if empty is end of today
     * @param {string} $end_range   string iso date in UTC, if empty is end of today
     * @param {string} $group       group by month, day, year
     *
     * @throws {string}
     *
     * @returns {MetricServiceGetRevenueResult}
     */
    GetRevenue: (start_range: string, end_range: string, group: string) => BackendResult<MetricServiceGetRevenueResult>

    /**
     * @permission user
     *
     * @throws {string}
     *
     * @returns {TotalKeyHoldersResult}
     */
    GetTotalKeyHolders: () => BackendResult<TotalKeyHoldersResult>

    /**
     * @permission user
     *
     * @throws {string}
     *
     * @returns {TotalMembersResult}
     */
    GetTotalMembers: () => BackendResult<TotalMembersResult>
}
