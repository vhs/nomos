/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as TestImport } from './routes/test'
import { Route as UserImport } from './routes/_user'
import { Route as PublicImport } from './routes/_public'
import { Route as AdminImport } from './routes/_admin'
import { Route as UserIndexImport } from './routes/_user/index'
import { Route as UserWebhooksImport } from './routes/_user/webhooks'
import { Route as UserVhsopenImport } from './routes/_user/vhsopen'
import { Route as UserTransactionsImport } from './routes/_user/transactions'
import { Route as UserSettingsImport } from './routes/_user/settings'
import { Route as UserPurchaseImport } from './routes/_user/purchase'
import { Route as UserProfileImport } from './routes/_user/profile'
import { Route as UserMembershipImport } from './routes/_user/membership'
import { Route as UserLogoutImport } from './routes/_user/logout'
import { Route as UserGrantsImport } from './routes/_user/grants'
import { Route as UserGetinvolvedImport } from './routes/_user/getinvolved'
import { Route as UserDooraccessImport } from './routes/_user/dooraccess'
import { Route as UserDashboardImport } from './routes/_user/dashboard'
import { Route as UserApikeysImport } from './routes/_user/apikeys'
import { Route as PublicRegisterImport } from './routes/_public/register'
import { Route as PublicRecoveryImport } from './routes/_public/recovery'
import { Route as PublicLoginImport } from './routes/_public/login'
import { Route as PublicFafoImport } from './routes/_public/fafo'
import { Route as AdminOauthImport } from './routes/_admin/oauth'
import { Route as AdminLogsImport } from './routes/_admin/logs'
import { Route as AdminEventsImport } from './routes/_admin/events'
import { Route as AdminConfigImport } from './routes/_admin/config'
import { Route as AdminBackupImport } from './routes/_admin/backup'
import { Route as AdminAdminIndexImport } from './routes/_admin/admin.index'
import { Route as UserUserAccesslogsImport } from './routes/_user/user.accesslogs'
import { Route as UserApikeysUsageImport } from './routes/_user/apikeys.usage'
import { Route as UserApikeysHelpImport } from './routes/_user/apikeys.help'
import { Route as UserApikeysKeyIdImport } from './routes/_user/apikeys.$keyId'
import { Route as AdminAdminWebhooksImport } from './routes/_admin/admin.webhooks'
import { Route as AdminAdminUsersImport } from './routes/_admin/admin.users'
import { Route as AdminAdminTransactionsImport } from './routes/_admin/admin.transactions'
import { Route as AdminAdminSystempreferencesImport } from './routes/_admin/admin.systempreferences'
import { Route as AdminAdminSystemkeysImport } from './routes/_admin/admin.systemkeys'
import { Route as AdminAdminStriperecordsImport } from './routes/_admin/admin.striperecords'
import { Route as AdminAdminSiteconfigurationImport } from './routes/_admin/admin.siteconfiguration'
import { Route as AdminAdminReportsImport } from './routes/_admin/admin.reports'
import { Route as AdminAdminPrivilegesImport } from './routes/_admin/admin.privileges'
import { Route as AdminAdminPaymentsImport } from './routes/_admin/admin.payments'
import { Route as AdminAdminPaymentgatewaysImport } from './routes/_admin/admin.paymentgateways'
import { Route as AdminAdminOauthImport } from './routes/_admin/admin.oauth'
import { Route as AdminAdminNewsletterImport } from './routes/_admin/admin.newsletter'
import { Route as AdminAdminMembershipsImport } from './routes/_admin/admin.memberships'
import { Route as AdminAdminMembercardsImport } from './routes/_admin/admin.membercards'
import { Route as AdminAdminLogsImport } from './routes/_admin/admin.logs'
import { Route as AdminAdminIpnrecordsImport } from './routes/_admin/admin.ipnrecords'
import { Route as AdminAdminEventsImport } from './routes/_admin/admin.events'
import { Route as AdminAdminEmailtemplatesImport } from './routes/_admin/admin.emailtemplates'
import { Route as AdminAdminEmailImport } from './routes/_admin/admin.email'
import { Route as AdminAdminDatabasebackupImport } from './routes/_admin/admin.databasebackup'
import { Route as AdminAdminDashboardImport } from './routes/_admin/admin.dashboard'
import { Route as AdminAdminApikeysImport } from './routes/_admin/admin.apikeys'
import { Route as AdminAdminAccesslogsImport } from './routes/_admin/admin.accesslogs'
import { Route as PublicRecoveryResetTokenImport } from './routes/_public/recovery.reset.$token'
import { Route as AdminAdminUsersNewImport } from './routes/_admin/admin.users.new'
import { Route as AdminAdminUsersUserIdImport } from './routes/_admin/admin.users.$userId'
import { Route as AdminAdminSystemkeysUsageImport } from './routes/_admin/admin.systemkeys.usage'
import { Route as AdminAdminSystemkeysHelpImport } from './routes/_admin/admin.systemkeys.help'
import { Route as AdminAdminMembershipsMembershipIdImport } from './routes/_admin/admin.memberships.$membershipId'

// Create/Update Routes

const TestRoute = TestImport.update({
  id: '/test',
  path: '/test',
  getParentRoute: () => rootRoute,
} as any)

const UserRoute = UserImport.update({
  id: '/_user',
  getParentRoute: () => rootRoute,
} as any)

const PublicRoute = PublicImport.update({
  id: '/_public',
  getParentRoute: () => rootRoute,
} as any)

const AdminRoute = AdminImport.update({
  id: '/_admin',
  getParentRoute: () => rootRoute,
} as any)

const UserIndexRoute = UserIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => UserRoute,
} as any)

const UserWebhooksRoute = UserWebhooksImport.update({
  id: '/webhooks',
  path: '/webhooks',
  getParentRoute: () => UserRoute,
} as any)

const UserVhsopenRoute = UserVhsopenImport.update({
  id: '/vhsopen',
  path: '/vhsopen',
  getParentRoute: () => UserRoute,
} as any)

const UserTransactionsRoute = UserTransactionsImport.update({
  id: '/transactions',
  path: '/transactions',
  getParentRoute: () => UserRoute,
} as any)

const UserSettingsRoute = UserSettingsImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => UserRoute,
} as any)

const UserPurchaseRoute = UserPurchaseImport.update({
  id: '/purchase',
  path: '/purchase',
  getParentRoute: () => UserRoute,
} as any)

const UserProfileRoute = UserProfileImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => UserRoute,
} as any)

const UserMembershipRoute = UserMembershipImport.update({
  id: '/membership',
  path: '/membership',
  getParentRoute: () => UserRoute,
} as any)

const UserLogoutRoute = UserLogoutImport.update({
  id: '/logout',
  path: '/logout',
  getParentRoute: () => UserRoute,
} as any)

const UserGrantsRoute = UserGrantsImport.update({
  id: '/grants',
  path: '/grants',
  getParentRoute: () => UserRoute,
} as any)

const UserGetinvolvedRoute = UserGetinvolvedImport.update({
  id: '/getinvolved',
  path: '/getinvolved',
  getParentRoute: () => UserRoute,
} as any)

const UserDooraccessRoute = UserDooraccessImport.update({
  id: '/dooraccess',
  path: '/dooraccess',
  getParentRoute: () => UserRoute,
} as any)

const UserDashboardRoute = UserDashboardImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => UserRoute,
} as any)

const UserApikeysRoute = UserApikeysImport.update({
  id: '/apikeys',
  path: '/apikeys',
  getParentRoute: () => UserRoute,
} as any)

const PublicRegisterRoute = PublicRegisterImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => PublicRoute,
} as any)

const PublicRecoveryRoute = PublicRecoveryImport.update({
  id: '/recovery',
  path: '/recovery',
  getParentRoute: () => PublicRoute,
} as any)

const PublicLoginRoute = PublicLoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => PublicRoute,
} as any)

const PublicFafoRoute = PublicFafoImport.update({
  id: '/fafo',
  path: '/fafo',
  getParentRoute: () => PublicRoute,
} as any)

const AdminOauthRoute = AdminOauthImport.update({
  id: '/oauth',
  path: '/oauth',
  getParentRoute: () => AdminRoute,
} as any)

const AdminLogsRoute = AdminLogsImport.update({
  id: '/logs',
  path: '/logs',
  getParentRoute: () => AdminRoute,
} as any)

const AdminEventsRoute = AdminEventsImport.update({
  id: '/events',
  path: '/events',
  getParentRoute: () => AdminRoute,
} as any)

const AdminConfigRoute = AdminConfigImport.update({
  id: '/config',
  path: '/config',
  getParentRoute: () => AdminRoute,
} as any)

const AdminBackupRoute = AdminBackupImport.update({
  id: '/backup',
  path: '/backup',
  getParentRoute: () => AdminRoute,
} as any)

const AdminAdminIndexRoute = AdminAdminIndexImport.update({
  id: '/admin/',
  path: '/admin/',
  getParentRoute: () => AdminRoute,
} as any)

const UserUserAccesslogsRoute = UserUserAccesslogsImport.update({
  id: '/user/accesslogs',
  path: '/user/accesslogs',
  getParentRoute: () => UserRoute,
} as any)

const UserApikeysUsageRoute = UserApikeysUsageImport.update({
  id: '/usage',
  path: '/usage',
  getParentRoute: () => UserApikeysRoute,
} as any)

const UserApikeysHelpRoute = UserApikeysHelpImport.update({
  id: '/help',
  path: '/help',
  getParentRoute: () => UserApikeysRoute,
} as any)

const UserApikeysKeyIdRoute = UserApikeysKeyIdImport.update({
  id: '/$keyId',
  path: '/$keyId',
  getParentRoute: () => UserApikeysRoute,
} as any)

const AdminAdminWebhooksRoute = AdminAdminWebhooksImport.update({
  id: '/admin/webhooks',
  path: '/admin/webhooks',
  getParentRoute: () => AdminRoute,
} as any)

const AdminAdminUsersRoute = AdminAdminUsersImport.update({
  id: '/admin/users',
  path: '/admin/users',
  getParentRoute: () => AdminRoute,
} as any)

const AdminAdminTransactionsRoute = AdminAdminTransactionsImport.update({
  id: '/admin/transactions',
  path: '/admin/transactions',
  getParentRoute: () => AdminRoute,
} as any)

const AdminAdminSystempreferencesRoute =
  AdminAdminSystempreferencesImport.update({
    id: '/admin/systempreferences',
    path: '/admin/systempreferences',
    getParentRoute: () => AdminRoute,
  } as any)

const AdminAdminSystemkeysRoute = AdminAdminSystemkeysImport.update({
  id: '/admin/systemkeys',
  path: '/admin/systemkeys',
  getParentRoute: () => AdminRoute,
} as any)

const AdminAdminStriperecordsRoute = AdminAdminStriperecordsImport.update({
  id: '/admin/striperecords',
  path: '/admin/striperecords',
  getParentRoute: () => AdminRoute,
} as any)

const AdminAdminSiteconfigurationRoute =
  AdminAdminSiteconfigurationImport.update({
    id: '/admin/siteconfiguration',
    path: '/admin/siteconfiguration',
    getParentRoute: () => AdminRoute,
  } as any)

const AdminAdminReportsRoute = AdminAdminReportsImport.update({
  id: '/admin/reports',
  path: '/admin/reports',
  getParentRoute: () => AdminRoute,
} as any)

const AdminAdminPrivilegesRoute = AdminAdminPrivilegesImport.update({
  id: '/admin/privileges',
  path: '/admin/privileges',
  getParentRoute: () => AdminRoute,
} as any)

const AdminAdminPaymentsRoute = AdminAdminPaymentsImport.update({
  id: '/admin/payments',
  path: '/admin/payments',
  getParentRoute: () => AdminRoute,
} as any)

const AdminAdminPaymentgatewaysRoute = AdminAdminPaymentgatewaysImport.update({
  id: '/admin/paymentgateways',
  path: '/admin/paymentgateways',
  getParentRoute: () => AdminRoute,
} as any)

const AdminAdminOauthRoute = AdminAdminOauthImport.update({
  id: '/admin/oauth',
  path: '/admin/oauth',
  getParentRoute: () => AdminRoute,
} as any)

const AdminAdminNewsletterRoute = AdminAdminNewsletterImport.update({
  id: '/admin/newsletter',
  path: '/admin/newsletter',
  getParentRoute: () => AdminRoute,
} as any)

const AdminAdminMembershipsRoute = AdminAdminMembershipsImport.update({
  id: '/admin/memberships',
  path: '/admin/memberships',
  getParentRoute: () => AdminRoute,
} as any)

const AdminAdminMembercardsRoute = AdminAdminMembercardsImport.update({
  id: '/admin/membercards',
  path: '/admin/membercards',
  getParentRoute: () => AdminRoute,
} as any)

const AdminAdminLogsRoute = AdminAdminLogsImport.update({
  id: '/admin/logs',
  path: '/admin/logs',
  getParentRoute: () => AdminRoute,
} as any)

const AdminAdminIpnrecordsRoute = AdminAdminIpnrecordsImport.update({
  id: '/admin/ipnrecords',
  path: '/admin/ipnrecords',
  getParentRoute: () => AdminRoute,
} as any)

const AdminAdminEventsRoute = AdminAdminEventsImport.update({
  id: '/admin/events',
  path: '/admin/events',
  getParentRoute: () => AdminRoute,
} as any)

const AdminAdminEmailtemplatesRoute = AdminAdminEmailtemplatesImport.update({
  id: '/admin/emailtemplates',
  path: '/admin/emailtemplates',
  getParentRoute: () => AdminRoute,
} as any)

const AdminAdminEmailRoute = AdminAdminEmailImport.update({
  id: '/admin/email',
  path: '/admin/email',
  getParentRoute: () => AdminRoute,
} as any)

const AdminAdminDatabasebackupRoute = AdminAdminDatabasebackupImport.update({
  id: '/admin/databasebackup',
  path: '/admin/databasebackup',
  getParentRoute: () => AdminRoute,
} as any)

const AdminAdminDashboardRoute = AdminAdminDashboardImport.update({
  id: '/admin/dashboard',
  path: '/admin/dashboard',
  getParentRoute: () => AdminRoute,
} as any)

const AdminAdminApikeysRoute = AdminAdminApikeysImport.update({
  id: '/admin/apikeys',
  path: '/admin/apikeys',
  getParentRoute: () => AdminRoute,
} as any)

const AdminAdminAccesslogsRoute = AdminAdminAccesslogsImport.update({
  id: '/admin/accesslogs',
  path: '/admin/accesslogs',
  getParentRoute: () => AdminRoute,
} as any)

const PublicRecoveryResetTokenRoute = PublicRecoveryResetTokenImport.update({
  id: '/reset/$token',
  path: '/reset/$token',
  getParentRoute: () => PublicRecoveryRoute,
} as any)

const AdminAdminUsersNewRoute = AdminAdminUsersNewImport.update({
  id: '/new',
  path: '/new',
  getParentRoute: () => AdminAdminUsersRoute,
} as any)

const AdminAdminUsersUserIdRoute = AdminAdminUsersUserIdImport.update({
  id: '/$userId',
  path: '/$userId',
  getParentRoute: () => AdminAdminUsersRoute,
} as any)

const AdminAdminSystemkeysUsageRoute = AdminAdminSystemkeysUsageImport.update({
  id: '/usage',
  path: '/usage',
  getParentRoute: () => AdminAdminSystemkeysRoute,
} as any)

const AdminAdminSystemkeysHelpRoute = AdminAdminSystemkeysHelpImport.update({
  id: '/help',
  path: '/help',
  getParentRoute: () => AdminAdminSystemkeysRoute,
} as any)

const AdminAdminMembershipsMembershipIdRoute =
  AdminAdminMembershipsMembershipIdImport.update({
    id: '/$membershipId',
    path: '/$membershipId',
    getParentRoute: () => AdminAdminMembershipsRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_admin': {
      id: '/_admin'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AdminImport
      parentRoute: typeof rootRoute
    }
    '/_public': {
      id: '/_public'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof PublicImport
      parentRoute: typeof rootRoute
    }
    '/_user': {
      id: '/_user'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof UserImport
      parentRoute: typeof rootRoute
    }
    '/test': {
      id: '/test'
      path: '/test'
      fullPath: '/test'
      preLoaderRoute: typeof TestImport
      parentRoute: typeof rootRoute
    }
    '/_admin/backup': {
      id: '/_admin/backup'
      path: '/backup'
      fullPath: '/backup'
      preLoaderRoute: typeof AdminBackupImport
      parentRoute: typeof AdminImport
    }
    '/_admin/config': {
      id: '/_admin/config'
      path: '/config'
      fullPath: '/config'
      preLoaderRoute: typeof AdminConfigImport
      parentRoute: typeof AdminImport
    }
    '/_admin/events': {
      id: '/_admin/events'
      path: '/events'
      fullPath: '/events'
      preLoaderRoute: typeof AdminEventsImport
      parentRoute: typeof AdminImport
    }
    '/_admin/logs': {
      id: '/_admin/logs'
      path: '/logs'
      fullPath: '/logs'
      preLoaderRoute: typeof AdminLogsImport
      parentRoute: typeof AdminImport
    }
    '/_admin/oauth': {
      id: '/_admin/oauth'
      path: '/oauth'
      fullPath: '/oauth'
      preLoaderRoute: typeof AdminOauthImport
      parentRoute: typeof AdminImport
    }
    '/_public/fafo': {
      id: '/_public/fafo'
      path: '/fafo'
      fullPath: '/fafo'
      preLoaderRoute: typeof PublicFafoImport
      parentRoute: typeof PublicImport
    }
    '/_public/login': {
      id: '/_public/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof PublicLoginImport
      parentRoute: typeof PublicImport
    }
    '/_public/recovery': {
      id: '/_public/recovery'
      path: '/recovery'
      fullPath: '/recovery'
      preLoaderRoute: typeof PublicRecoveryImport
      parentRoute: typeof PublicImport
    }
    '/_public/register': {
      id: '/_public/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof PublicRegisterImport
      parentRoute: typeof PublicImport
    }
    '/_user/apikeys': {
      id: '/_user/apikeys'
      path: '/apikeys'
      fullPath: '/apikeys'
      preLoaderRoute: typeof UserApikeysImport
      parentRoute: typeof UserImport
    }
    '/_user/dashboard': {
      id: '/_user/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof UserDashboardImport
      parentRoute: typeof UserImport
    }
    '/_user/dooraccess': {
      id: '/_user/dooraccess'
      path: '/dooraccess'
      fullPath: '/dooraccess'
      preLoaderRoute: typeof UserDooraccessImport
      parentRoute: typeof UserImport
    }
    '/_user/getinvolved': {
      id: '/_user/getinvolved'
      path: '/getinvolved'
      fullPath: '/getinvolved'
      preLoaderRoute: typeof UserGetinvolvedImport
      parentRoute: typeof UserImport
    }
    '/_user/grants': {
      id: '/_user/grants'
      path: '/grants'
      fullPath: '/grants'
      preLoaderRoute: typeof UserGrantsImport
      parentRoute: typeof UserImport
    }
    '/_user/logout': {
      id: '/_user/logout'
      path: '/logout'
      fullPath: '/logout'
      preLoaderRoute: typeof UserLogoutImport
      parentRoute: typeof UserImport
    }
    '/_user/membership': {
      id: '/_user/membership'
      path: '/membership'
      fullPath: '/membership'
      preLoaderRoute: typeof UserMembershipImport
      parentRoute: typeof UserImport
    }
    '/_user/profile': {
      id: '/_user/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof UserProfileImport
      parentRoute: typeof UserImport
    }
    '/_user/purchase': {
      id: '/_user/purchase'
      path: '/purchase'
      fullPath: '/purchase'
      preLoaderRoute: typeof UserPurchaseImport
      parentRoute: typeof UserImport
    }
    '/_user/settings': {
      id: '/_user/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof UserSettingsImport
      parentRoute: typeof UserImport
    }
    '/_user/transactions': {
      id: '/_user/transactions'
      path: '/transactions'
      fullPath: '/transactions'
      preLoaderRoute: typeof UserTransactionsImport
      parentRoute: typeof UserImport
    }
    '/_user/vhsopen': {
      id: '/_user/vhsopen'
      path: '/vhsopen'
      fullPath: '/vhsopen'
      preLoaderRoute: typeof UserVhsopenImport
      parentRoute: typeof UserImport
    }
    '/_user/webhooks': {
      id: '/_user/webhooks'
      path: '/webhooks'
      fullPath: '/webhooks'
      preLoaderRoute: typeof UserWebhooksImport
      parentRoute: typeof UserImport
    }
    '/_user/': {
      id: '/_user/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof UserIndexImport
      parentRoute: typeof UserImport
    }
    '/_admin/admin/accesslogs': {
      id: '/_admin/admin/accesslogs'
      path: '/admin/accesslogs'
      fullPath: '/admin/accesslogs'
      preLoaderRoute: typeof AdminAdminAccesslogsImport
      parentRoute: typeof AdminImport
    }
    '/_admin/admin/apikeys': {
      id: '/_admin/admin/apikeys'
      path: '/admin/apikeys'
      fullPath: '/admin/apikeys'
      preLoaderRoute: typeof AdminAdminApikeysImport
      parentRoute: typeof AdminImport
    }
    '/_admin/admin/dashboard': {
      id: '/_admin/admin/dashboard'
      path: '/admin/dashboard'
      fullPath: '/admin/dashboard'
      preLoaderRoute: typeof AdminAdminDashboardImport
      parentRoute: typeof AdminImport
    }
    '/_admin/admin/databasebackup': {
      id: '/_admin/admin/databasebackup'
      path: '/admin/databasebackup'
      fullPath: '/admin/databasebackup'
      preLoaderRoute: typeof AdminAdminDatabasebackupImport
      parentRoute: typeof AdminImport
    }
    '/_admin/admin/email': {
      id: '/_admin/admin/email'
      path: '/admin/email'
      fullPath: '/admin/email'
      preLoaderRoute: typeof AdminAdminEmailImport
      parentRoute: typeof AdminImport
    }
    '/_admin/admin/emailtemplates': {
      id: '/_admin/admin/emailtemplates'
      path: '/admin/emailtemplates'
      fullPath: '/admin/emailtemplates'
      preLoaderRoute: typeof AdminAdminEmailtemplatesImport
      parentRoute: typeof AdminImport
    }
    '/_admin/admin/events': {
      id: '/_admin/admin/events'
      path: '/admin/events'
      fullPath: '/admin/events'
      preLoaderRoute: typeof AdminAdminEventsImport
      parentRoute: typeof AdminImport
    }
    '/_admin/admin/ipnrecords': {
      id: '/_admin/admin/ipnrecords'
      path: '/admin/ipnrecords'
      fullPath: '/admin/ipnrecords'
      preLoaderRoute: typeof AdminAdminIpnrecordsImport
      parentRoute: typeof AdminImport
    }
    '/_admin/admin/logs': {
      id: '/_admin/admin/logs'
      path: '/admin/logs'
      fullPath: '/admin/logs'
      preLoaderRoute: typeof AdminAdminLogsImport
      parentRoute: typeof AdminImport
    }
    '/_admin/admin/membercards': {
      id: '/_admin/admin/membercards'
      path: '/admin/membercards'
      fullPath: '/admin/membercards'
      preLoaderRoute: typeof AdminAdminMembercardsImport
      parentRoute: typeof AdminImport
    }
    '/_admin/admin/memberships': {
      id: '/_admin/admin/memberships'
      path: '/admin/memberships'
      fullPath: '/admin/memberships'
      preLoaderRoute: typeof AdminAdminMembershipsImport
      parentRoute: typeof AdminImport
    }
    '/_admin/admin/newsletter': {
      id: '/_admin/admin/newsletter'
      path: '/admin/newsletter'
      fullPath: '/admin/newsletter'
      preLoaderRoute: typeof AdminAdminNewsletterImport
      parentRoute: typeof AdminImport
    }
    '/_admin/admin/oauth': {
      id: '/_admin/admin/oauth'
      path: '/admin/oauth'
      fullPath: '/admin/oauth'
      preLoaderRoute: typeof AdminAdminOauthImport
      parentRoute: typeof AdminImport
    }
    '/_admin/admin/paymentgateways': {
      id: '/_admin/admin/paymentgateways'
      path: '/admin/paymentgateways'
      fullPath: '/admin/paymentgateways'
      preLoaderRoute: typeof AdminAdminPaymentgatewaysImport
      parentRoute: typeof AdminImport
    }
    '/_admin/admin/payments': {
      id: '/_admin/admin/payments'
      path: '/admin/payments'
      fullPath: '/admin/payments'
      preLoaderRoute: typeof AdminAdminPaymentsImport
      parentRoute: typeof AdminImport
    }
    '/_admin/admin/privileges': {
      id: '/_admin/admin/privileges'
      path: '/admin/privileges'
      fullPath: '/admin/privileges'
      preLoaderRoute: typeof AdminAdminPrivilegesImport
      parentRoute: typeof AdminImport
    }
    '/_admin/admin/reports': {
      id: '/_admin/admin/reports'
      path: '/admin/reports'
      fullPath: '/admin/reports'
      preLoaderRoute: typeof AdminAdminReportsImport
      parentRoute: typeof AdminImport
    }
    '/_admin/admin/siteconfiguration': {
      id: '/_admin/admin/siteconfiguration'
      path: '/admin/siteconfiguration'
      fullPath: '/admin/siteconfiguration'
      preLoaderRoute: typeof AdminAdminSiteconfigurationImport
      parentRoute: typeof AdminImport
    }
    '/_admin/admin/striperecords': {
      id: '/_admin/admin/striperecords'
      path: '/admin/striperecords'
      fullPath: '/admin/striperecords'
      preLoaderRoute: typeof AdminAdminStriperecordsImport
      parentRoute: typeof AdminImport
    }
    '/_admin/admin/systemkeys': {
      id: '/_admin/admin/systemkeys'
      path: '/admin/systemkeys'
      fullPath: '/admin/systemkeys'
      preLoaderRoute: typeof AdminAdminSystemkeysImport
      parentRoute: typeof AdminImport
    }
    '/_admin/admin/systempreferences': {
      id: '/_admin/admin/systempreferences'
      path: '/admin/systempreferences'
      fullPath: '/admin/systempreferences'
      preLoaderRoute: typeof AdminAdminSystempreferencesImport
      parentRoute: typeof AdminImport
    }
    '/_admin/admin/transactions': {
      id: '/_admin/admin/transactions'
      path: '/admin/transactions'
      fullPath: '/admin/transactions'
      preLoaderRoute: typeof AdminAdminTransactionsImport
      parentRoute: typeof AdminImport
    }
    '/_admin/admin/users': {
      id: '/_admin/admin/users'
      path: '/admin/users'
      fullPath: '/admin/users'
      preLoaderRoute: typeof AdminAdminUsersImport
      parentRoute: typeof AdminImport
    }
    '/_admin/admin/webhooks': {
      id: '/_admin/admin/webhooks'
      path: '/admin/webhooks'
      fullPath: '/admin/webhooks'
      preLoaderRoute: typeof AdminAdminWebhooksImport
      parentRoute: typeof AdminImport
    }
    '/_user/apikeys/$keyId': {
      id: '/_user/apikeys/$keyId'
      path: '/$keyId'
      fullPath: '/apikeys/$keyId'
      preLoaderRoute: typeof UserApikeysKeyIdImport
      parentRoute: typeof UserApikeysImport
    }
    '/_user/apikeys/help': {
      id: '/_user/apikeys/help'
      path: '/help'
      fullPath: '/apikeys/help'
      preLoaderRoute: typeof UserApikeysHelpImport
      parentRoute: typeof UserApikeysImport
    }
    '/_user/apikeys/usage': {
      id: '/_user/apikeys/usage'
      path: '/usage'
      fullPath: '/apikeys/usage'
      preLoaderRoute: typeof UserApikeysUsageImport
      parentRoute: typeof UserApikeysImport
    }
    '/_user/user/accesslogs': {
      id: '/_user/user/accesslogs'
      path: '/user/accesslogs'
      fullPath: '/user/accesslogs'
      preLoaderRoute: typeof UserUserAccesslogsImport
      parentRoute: typeof UserImport
    }
    '/_admin/admin/': {
      id: '/_admin/admin/'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminAdminIndexImport
      parentRoute: typeof AdminImport
    }
    '/_admin/admin/memberships/$membershipId': {
      id: '/_admin/admin/memberships/$membershipId'
      path: '/$membershipId'
      fullPath: '/admin/memberships/$membershipId'
      preLoaderRoute: typeof AdminAdminMembershipsMembershipIdImport
      parentRoute: typeof AdminAdminMembershipsImport
    }
    '/_admin/admin/systemkeys/help': {
      id: '/_admin/admin/systemkeys/help'
      path: '/help'
      fullPath: '/admin/systemkeys/help'
      preLoaderRoute: typeof AdminAdminSystemkeysHelpImport
      parentRoute: typeof AdminAdminSystemkeysImport
    }
    '/_admin/admin/systemkeys/usage': {
      id: '/_admin/admin/systemkeys/usage'
      path: '/usage'
      fullPath: '/admin/systemkeys/usage'
      preLoaderRoute: typeof AdminAdminSystemkeysUsageImport
      parentRoute: typeof AdminAdminSystemkeysImport
    }
    '/_admin/admin/users/$userId': {
      id: '/_admin/admin/users/$userId'
      path: '/$userId'
      fullPath: '/admin/users/$userId'
      preLoaderRoute: typeof AdminAdminUsersUserIdImport
      parentRoute: typeof AdminAdminUsersImport
    }
    '/_admin/admin/users/new': {
      id: '/_admin/admin/users/new'
      path: '/new'
      fullPath: '/admin/users/new'
      preLoaderRoute: typeof AdminAdminUsersNewImport
      parentRoute: typeof AdminAdminUsersImport
    }
    '/_public/recovery/reset/$token': {
      id: '/_public/recovery/reset/$token'
      path: '/reset/$token'
      fullPath: '/recovery/reset/$token'
      preLoaderRoute: typeof PublicRecoveryResetTokenImport
      parentRoute: typeof PublicRecoveryImport
    }
  }
}

// Create and export the route tree

interface AdminAdminMembershipsRouteChildren {
  AdminAdminMembershipsMembershipIdRoute: typeof AdminAdminMembershipsMembershipIdRoute
}

const AdminAdminMembershipsRouteChildren: AdminAdminMembershipsRouteChildren = {
  AdminAdminMembershipsMembershipIdRoute:
    AdminAdminMembershipsMembershipIdRoute,
}

const AdminAdminMembershipsRouteWithChildren =
  AdminAdminMembershipsRoute._addFileChildren(
    AdminAdminMembershipsRouteChildren,
  )

interface AdminAdminSystemkeysRouteChildren {
  AdminAdminSystemkeysHelpRoute: typeof AdminAdminSystemkeysHelpRoute
  AdminAdminSystemkeysUsageRoute: typeof AdminAdminSystemkeysUsageRoute
}

const AdminAdminSystemkeysRouteChildren: AdminAdminSystemkeysRouteChildren = {
  AdminAdminSystemkeysHelpRoute: AdminAdminSystemkeysHelpRoute,
  AdminAdminSystemkeysUsageRoute: AdminAdminSystemkeysUsageRoute,
}

const AdminAdminSystemkeysRouteWithChildren =
  AdminAdminSystemkeysRoute._addFileChildren(AdminAdminSystemkeysRouteChildren)

interface AdminAdminUsersRouteChildren {
  AdminAdminUsersUserIdRoute: typeof AdminAdminUsersUserIdRoute
  AdminAdminUsersNewRoute: typeof AdminAdminUsersNewRoute
}

const AdminAdminUsersRouteChildren: AdminAdminUsersRouteChildren = {
  AdminAdminUsersUserIdRoute: AdminAdminUsersUserIdRoute,
  AdminAdminUsersNewRoute: AdminAdminUsersNewRoute,
}

const AdminAdminUsersRouteWithChildren = AdminAdminUsersRoute._addFileChildren(
  AdminAdminUsersRouteChildren,
)

interface AdminRouteChildren {
  AdminBackupRoute: typeof AdminBackupRoute
  AdminConfigRoute: typeof AdminConfigRoute
  AdminEventsRoute: typeof AdminEventsRoute
  AdminLogsRoute: typeof AdminLogsRoute
  AdminOauthRoute: typeof AdminOauthRoute
  AdminAdminAccesslogsRoute: typeof AdminAdminAccesslogsRoute
  AdminAdminApikeysRoute: typeof AdminAdminApikeysRoute
  AdminAdminDashboardRoute: typeof AdminAdminDashboardRoute
  AdminAdminDatabasebackupRoute: typeof AdminAdminDatabasebackupRoute
  AdminAdminEmailRoute: typeof AdminAdminEmailRoute
  AdminAdminEmailtemplatesRoute: typeof AdminAdminEmailtemplatesRoute
  AdminAdminEventsRoute: typeof AdminAdminEventsRoute
  AdminAdminIpnrecordsRoute: typeof AdminAdminIpnrecordsRoute
  AdminAdminLogsRoute: typeof AdminAdminLogsRoute
  AdminAdminMembercardsRoute: typeof AdminAdminMembercardsRoute
  AdminAdminMembershipsRoute: typeof AdminAdminMembershipsRouteWithChildren
  AdminAdminNewsletterRoute: typeof AdminAdminNewsletterRoute
  AdminAdminOauthRoute: typeof AdminAdminOauthRoute
  AdminAdminPaymentgatewaysRoute: typeof AdminAdminPaymentgatewaysRoute
  AdminAdminPaymentsRoute: typeof AdminAdminPaymentsRoute
  AdminAdminPrivilegesRoute: typeof AdminAdminPrivilegesRoute
  AdminAdminReportsRoute: typeof AdminAdminReportsRoute
  AdminAdminSiteconfigurationRoute: typeof AdminAdminSiteconfigurationRoute
  AdminAdminStriperecordsRoute: typeof AdminAdminStriperecordsRoute
  AdminAdminSystemkeysRoute: typeof AdminAdminSystemkeysRouteWithChildren
  AdminAdminSystempreferencesRoute: typeof AdminAdminSystempreferencesRoute
  AdminAdminTransactionsRoute: typeof AdminAdminTransactionsRoute
  AdminAdminUsersRoute: typeof AdminAdminUsersRouteWithChildren
  AdminAdminWebhooksRoute: typeof AdminAdminWebhooksRoute
  AdminAdminIndexRoute: typeof AdminAdminIndexRoute
}

const AdminRouteChildren: AdminRouteChildren = {
  AdminBackupRoute: AdminBackupRoute,
  AdminConfigRoute: AdminConfigRoute,
  AdminEventsRoute: AdminEventsRoute,
  AdminLogsRoute: AdminLogsRoute,
  AdminOauthRoute: AdminOauthRoute,
  AdminAdminAccesslogsRoute: AdminAdminAccesslogsRoute,
  AdminAdminApikeysRoute: AdminAdminApikeysRoute,
  AdminAdminDashboardRoute: AdminAdminDashboardRoute,
  AdminAdminDatabasebackupRoute: AdminAdminDatabasebackupRoute,
  AdminAdminEmailRoute: AdminAdminEmailRoute,
  AdminAdminEmailtemplatesRoute: AdminAdminEmailtemplatesRoute,
  AdminAdminEventsRoute: AdminAdminEventsRoute,
  AdminAdminIpnrecordsRoute: AdminAdminIpnrecordsRoute,
  AdminAdminLogsRoute: AdminAdminLogsRoute,
  AdminAdminMembercardsRoute: AdminAdminMembercardsRoute,
  AdminAdminMembershipsRoute: AdminAdminMembershipsRouteWithChildren,
  AdminAdminNewsletterRoute: AdminAdminNewsletterRoute,
  AdminAdminOauthRoute: AdminAdminOauthRoute,
  AdminAdminPaymentgatewaysRoute: AdminAdminPaymentgatewaysRoute,
  AdminAdminPaymentsRoute: AdminAdminPaymentsRoute,
  AdminAdminPrivilegesRoute: AdminAdminPrivilegesRoute,
  AdminAdminReportsRoute: AdminAdminReportsRoute,
  AdminAdminSiteconfigurationRoute: AdminAdminSiteconfigurationRoute,
  AdminAdminStriperecordsRoute: AdminAdminStriperecordsRoute,
  AdminAdminSystemkeysRoute: AdminAdminSystemkeysRouteWithChildren,
  AdminAdminSystempreferencesRoute: AdminAdminSystempreferencesRoute,
  AdminAdminTransactionsRoute: AdminAdminTransactionsRoute,
  AdminAdminUsersRoute: AdminAdminUsersRouteWithChildren,
  AdminAdminWebhooksRoute: AdminAdminWebhooksRoute,
  AdminAdminIndexRoute: AdminAdminIndexRoute,
}

const AdminRouteWithChildren = AdminRoute._addFileChildren(AdminRouteChildren)

interface PublicRecoveryRouteChildren {
  PublicRecoveryResetTokenRoute: typeof PublicRecoveryResetTokenRoute
}

const PublicRecoveryRouteChildren: PublicRecoveryRouteChildren = {
  PublicRecoveryResetTokenRoute: PublicRecoveryResetTokenRoute,
}

const PublicRecoveryRouteWithChildren = PublicRecoveryRoute._addFileChildren(
  PublicRecoveryRouteChildren,
)

interface PublicRouteChildren {
  PublicFafoRoute: typeof PublicFafoRoute
  PublicLoginRoute: typeof PublicLoginRoute
  PublicRecoveryRoute: typeof PublicRecoveryRouteWithChildren
  PublicRegisterRoute: typeof PublicRegisterRoute
}

const PublicRouteChildren: PublicRouteChildren = {
  PublicFafoRoute: PublicFafoRoute,
  PublicLoginRoute: PublicLoginRoute,
  PublicRecoveryRoute: PublicRecoveryRouteWithChildren,
  PublicRegisterRoute: PublicRegisterRoute,
}

const PublicRouteWithChildren =
  PublicRoute._addFileChildren(PublicRouteChildren)

interface UserApikeysRouteChildren {
  UserApikeysKeyIdRoute: typeof UserApikeysKeyIdRoute
  UserApikeysHelpRoute: typeof UserApikeysHelpRoute
  UserApikeysUsageRoute: typeof UserApikeysUsageRoute
}

const UserApikeysRouteChildren: UserApikeysRouteChildren = {
  UserApikeysKeyIdRoute: UserApikeysKeyIdRoute,
  UserApikeysHelpRoute: UserApikeysHelpRoute,
  UserApikeysUsageRoute: UserApikeysUsageRoute,
}

const UserApikeysRouteWithChildren = UserApikeysRoute._addFileChildren(
  UserApikeysRouteChildren,
)

interface UserRouteChildren {
  UserApikeysRoute: typeof UserApikeysRouteWithChildren
  UserDashboardRoute: typeof UserDashboardRoute
  UserDooraccessRoute: typeof UserDooraccessRoute
  UserGetinvolvedRoute: typeof UserGetinvolvedRoute
  UserGrantsRoute: typeof UserGrantsRoute
  UserLogoutRoute: typeof UserLogoutRoute
  UserMembershipRoute: typeof UserMembershipRoute
  UserProfileRoute: typeof UserProfileRoute
  UserPurchaseRoute: typeof UserPurchaseRoute
  UserSettingsRoute: typeof UserSettingsRoute
  UserTransactionsRoute: typeof UserTransactionsRoute
  UserVhsopenRoute: typeof UserVhsopenRoute
  UserWebhooksRoute: typeof UserWebhooksRoute
  UserIndexRoute: typeof UserIndexRoute
  UserUserAccesslogsRoute: typeof UserUserAccesslogsRoute
}

const UserRouteChildren: UserRouteChildren = {
  UserApikeysRoute: UserApikeysRouteWithChildren,
  UserDashboardRoute: UserDashboardRoute,
  UserDooraccessRoute: UserDooraccessRoute,
  UserGetinvolvedRoute: UserGetinvolvedRoute,
  UserGrantsRoute: UserGrantsRoute,
  UserLogoutRoute: UserLogoutRoute,
  UserMembershipRoute: UserMembershipRoute,
  UserProfileRoute: UserProfileRoute,
  UserPurchaseRoute: UserPurchaseRoute,
  UserSettingsRoute: UserSettingsRoute,
  UserTransactionsRoute: UserTransactionsRoute,
  UserVhsopenRoute: UserVhsopenRoute,
  UserWebhooksRoute: UserWebhooksRoute,
  UserIndexRoute: UserIndexRoute,
  UserUserAccesslogsRoute: UserUserAccesslogsRoute,
}

const UserRouteWithChildren = UserRoute._addFileChildren(UserRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof UserRouteWithChildren
  '/test': typeof TestRoute
  '/backup': typeof AdminBackupRoute
  '/config': typeof AdminConfigRoute
  '/events': typeof AdminEventsRoute
  '/logs': typeof AdminLogsRoute
  '/oauth': typeof AdminOauthRoute
  '/fafo': typeof PublicFafoRoute
  '/login': typeof PublicLoginRoute
  '/recovery': typeof PublicRecoveryRouteWithChildren
  '/register': typeof PublicRegisterRoute
  '/apikeys': typeof UserApikeysRouteWithChildren
  '/dashboard': typeof UserDashboardRoute
  '/dooraccess': typeof UserDooraccessRoute
  '/getinvolved': typeof UserGetinvolvedRoute
  '/grants': typeof UserGrantsRoute
  '/logout': typeof UserLogoutRoute
  '/membership': typeof UserMembershipRoute
  '/profile': typeof UserProfileRoute
  '/purchase': typeof UserPurchaseRoute
  '/settings': typeof UserSettingsRoute
  '/transactions': typeof UserTransactionsRoute
  '/vhsopen': typeof UserVhsopenRoute
  '/webhooks': typeof UserWebhooksRoute
  '/': typeof UserIndexRoute
  '/admin/accesslogs': typeof AdminAdminAccesslogsRoute
  '/admin/apikeys': typeof AdminAdminApikeysRoute
  '/admin/dashboard': typeof AdminAdminDashboardRoute
  '/admin/databasebackup': typeof AdminAdminDatabasebackupRoute
  '/admin/email': typeof AdminAdminEmailRoute
  '/admin/emailtemplates': typeof AdminAdminEmailtemplatesRoute
  '/admin/events': typeof AdminAdminEventsRoute
  '/admin/ipnrecords': typeof AdminAdminIpnrecordsRoute
  '/admin/logs': typeof AdminAdminLogsRoute
  '/admin/membercards': typeof AdminAdminMembercardsRoute
  '/admin/memberships': typeof AdminAdminMembershipsRouteWithChildren
  '/admin/newsletter': typeof AdminAdminNewsletterRoute
  '/admin/oauth': typeof AdminAdminOauthRoute
  '/admin/paymentgateways': typeof AdminAdminPaymentgatewaysRoute
  '/admin/payments': typeof AdminAdminPaymentsRoute
  '/admin/privileges': typeof AdminAdminPrivilegesRoute
  '/admin/reports': typeof AdminAdminReportsRoute
  '/admin/siteconfiguration': typeof AdminAdminSiteconfigurationRoute
  '/admin/striperecords': typeof AdminAdminStriperecordsRoute
  '/admin/systemkeys': typeof AdminAdminSystemkeysRouteWithChildren
  '/admin/systempreferences': typeof AdminAdminSystempreferencesRoute
  '/admin/transactions': typeof AdminAdminTransactionsRoute
  '/admin/users': typeof AdminAdminUsersRouteWithChildren
  '/admin/webhooks': typeof AdminAdminWebhooksRoute
  '/apikeys/$keyId': typeof UserApikeysKeyIdRoute
  '/apikeys/help': typeof UserApikeysHelpRoute
  '/apikeys/usage': typeof UserApikeysUsageRoute
  '/user/accesslogs': typeof UserUserAccesslogsRoute
  '/admin': typeof AdminAdminIndexRoute
  '/admin/memberships/$membershipId': typeof AdminAdminMembershipsMembershipIdRoute
  '/admin/systemkeys/help': typeof AdminAdminSystemkeysHelpRoute
  '/admin/systemkeys/usage': typeof AdminAdminSystemkeysUsageRoute
  '/admin/users/$userId': typeof AdminAdminUsersUserIdRoute
  '/admin/users/new': typeof AdminAdminUsersNewRoute
  '/recovery/reset/$token': typeof PublicRecoveryResetTokenRoute
}

export interface FileRoutesByTo {
  '': typeof PublicRouteWithChildren
  '/test': typeof TestRoute
  '/backup': typeof AdminBackupRoute
  '/config': typeof AdminConfigRoute
  '/events': typeof AdminEventsRoute
  '/logs': typeof AdminLogsRoute
  '/oauth': typeof AdminOauthRoute
  '/fafo': typeof PublicFafoRoute
  '/login': typeof PublicLoginRoute
  '/recovery': typeof PublicRecoveryRouteWithChildren
  '/register': typeof PublicRegisterRoute
  '/apikeys': typeof UserApikeysRouteWithChildren
  '/dashboard': typeof UserDashboardRoute
  '/dooraccess': typeof UserDooraccessRoute
  '/getinvolved': typeof UserGetinvolvedRoute
  '/grants': typeof UserGrantsRoute
  '/logout': typeof UserLogoutRoute
  '/membership': typeof UserMembershipRoute
  '/profile': typeof UserProfileRoute
  '/purchase': typeof UserPurchaseRoute
  '/settings': typeof UserSettingsRoute
  '/transactions': typeof UserTransactionsRoute
  '/vhsopen': typeof UserVhsopenRoute
  '/webhooks': typeof UserWebhooksRoute
  '/': typeof UserIndexRoute
  '/admin/accesslogs': typeof AdminAdminAccesslogsRoute
  '/admin/apikeys': typeof AdminAdminApikeysRoute
  '/admin/dashboard': typeof AdminAdminDashboardRoute
  '/admin/databasebackup': typeof AdminAdminDatabasebackupRoute
  '/admin/email': typeof AdminAdminEmailRoute
  '/admin/emailtemplates': typeof AdminAdminEmailtemplatesRoute
  '/admin/events': typeof AdminAdminEventsRoute
  '/admin/ipnrecords': typeof AdminAdminIpnrecordsRoute
  '/admin/logs': typeof AdminAdminLogsRoute
  '/admin/membercards': typeof AdminAdminMembercardsRoute
  '/admin/memberships': typeof AdminAdminMembershipsRouteWithChildren
  '/admin/newsletter': typeof AdminAdminNewsletterRoute
  '/admin/oauth': typeof AdminAdminOauthRoute
  '/admin/paymentgateways': typeof AdminAdminPaymentgatewaysRoute
  '/admin/payments': typeof AdminAdminPaymentsRoute
  '/admin/privileges': typeof AdminAdminPrivilegesRoute
  '/admin/reports': typeof AdminAdminReportsRoute
  '/admin/siteconfiguration': typeof AdminAdminSiteconfigurationRoute
  '/admin/striperecords': typeof AdminAdminStriperecordsRoute
  '/admin/systemkeys': typeof AdminAdminSystemkeysRouteWithChildren
  '/admin/systempreferences': typeof AdminAdminSystempreferencesRoute
  '/admin/transactions': typeof AdminAdminTransactionsRoute
  '/admin/users': typeof AdminAdminUsersRouteWithChildren
  '/admin/webhooks': typeof AdminAdminWebhooksRoute
  '/apikeys/$keyId': typeof UserApikeysKeyIdRoute
  '/apikeys/help': typeof UserApikeysHelpRoute
  '/apikeys/usage': typeof UserApikeysUsageRoute
  '/user/accesslogs': typeof UserUserAccesslogsRoute
  '/admin': typeof AdminAdminIndexRoute
  '/admin/memberships/$membershipId': typeof AdminAdminMembershipsMembershipIdRoute
  '/admin/systemkeys/help': typeof AdminAdminSystemkeysHelpRoute
  '/admin/systemkeys/usage': typeof AdminAdminSystemkeysUsageRoute
  '/admin/users/$userId': typeof AdminAdminUsersUserIdRoute
  '/admin/users/new': typeof AdminAdminUsersNewRoute
  '/recovery/reset/$token': typeof PublicRecoveryResetTokenRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_admin': typeof AdminRouteWithChildren
  '/_public': typeof PublicRouteWithChildren
  '/_user': typeof UserRouteWithChildren
  '/test': typeof TestRoute
  '/_admin/backup': typeof AdminBackupRoute
  '/_admin/config': typeof AdminConfigRoute
  '/_admin/events': typeof AdminEventsRoute
  '/_admin/logs': typeof AdminLogsRoute
  '/_admin/oauth': typeof AdminOauthRoute
  '/_public/fafo': typeof PublicFafoRoute
  '/_public/login': typeof PublicLoginRoute
  '/_public/recovery': typeof PublicRecoveryRouteWithChildren
  '/_public/register': typeof PublicRegisterRoute
  '/_user/apikeys': typeof UserApikeysRouteWithChildren
  '/_user/dashboard': typeof UserDashboardRoute
  '/_user/dooraccess': typeof UserDooraccessRoute
  '/_user/getinvolved': typeof UserGetinvolvedRoute
  '/_user/grants': typeof UserGrantsRoute
  '/_user/logout': typeof UserLogoutRoute
  '/_user/membership': typeof UserMembershipRoute
  '/_user/profile': typeof UserProfileRoute
  '/_user/purchase': typeof UserPurchaseRoute
  '/_user/settings': typeof UserSettingsRoute
  '/_user/transactions': typeof UserTransactionsRoute
  '/_user/vhsopen': typeof UserVhsopenRoute
  '/_user/webhooks': typeof UserWebhooksRoute
  '/_user/': typeof UserIndexRoute
  '/_admin/admin/accesslogs': typeof AdminAdminAccesslogsRoute
  '/_admin/admin/apikeys': typeof AdminAdminApikeysRoute
  '/_admin/admin/dashboard': typeof AdminAdminDashboardRoute
  '/_admin/admin/databasebackup': typeof AdminAdminDatabasebackupRoute
  '/_admin/admin/email': typeof AdminAdminEmailRoute
  '/_admin/admin/emailtemplates': typeof AdminAdminEmailtemplatesRoute
  '/_admin/admin/events': typeof AdminAdminEventsRoute
  '/_admin/admin/ipnrecords': typeof AdminAdminIpnrecordsRoute
  '/_admin/admin/logs': typeof AdminAdminLogsRoute
  '/_admin/admin/membercards': typeof AdminAdminMembercardsRoute
  '/_admin/admin/memberships': typeof AdminAdminMembershipsRouteWithChildren
  '/_admin/admin/newsletter': typeof AdminAdminNewsletterRoute
  '/_admin/admin/oauth': typeof AdminAdminOauthRoute
  '/_admin/admin/paymentgateways': typeof AdminAdminPaymentgatewaysRoute
  '/_admin/admin/payments': typeof AdminAdminPaymentsRoute
  '/_admin/admin/privileges': typeof AdminAdminPrivilegesRoute
  '/_admin/admin/reports': typeof AdminAdminReportsRoute
  '/_admin/admin/siteconfiguration': typeof AdminAdminSiteconfigurationRoute
  '/_admin/admin/striperecords': typeof AdminAdminStriperecordsRoute
  '/_admin/admin/systemkeys': typeof AdminAdminSystemkeysRouteWithChildren
  '/_admin/admin/systempreferences': typeof AdminAdminSystempreferencesRoute
  '/_admin/admin/transactions': typeof AdminAdminTransactionsRoute
  '/_admin/admin/users': typeof AdminAdminUsersRouteWithChildren
  '/_admin/admin/webhooks': typeof AdminAdminWebhooksRoute
  '/_user/apikeys/$keyId': typeof UserApikeysKeyIdRoute
  '/_user/apikeys/help': typeof UserApikeysHelpRoute
  '/_user/apikeys/usage': typeof UserApikeysUsageRoute
  '/_user/user/accesslogs': typeof UserUserAccesslogsRoute
  '/_admin/admin/': typeof AdminAdminIndexRoute
  '/_admin/admin/memberships/$membershipId': typeof AdminAdminMembershipsMembershipIdRoute
  '/_admin/admin/systemkeys/help': typeof AdminAdminSystemkeysHelpRoute
  '/_admin/admin/systemkeys/usage': typeof AdminAdminSystemkeysUsageRoute
  '/_admin/admin/users/$userId': typeof AdminAdminUsersUserIdRoute
  '/_admin/admin/users/new': typeof AdminAdminUsersNewRoute
  '/_public/recovery/reset/$token': typeof PublicRecoveryResetTokenRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/test'
    | '/backup'
    | '/config'
    | '/events'
    | '/logs'
    | '/oauth'
    | '/fafo'
    | '/login'
    | '/recovery'
    | '/register'
    | '/apikeys'
    | '/dashboard'
    | '/dooraccess'
    | '/getinvolved'
    | '/grants'
    | '/logout'
    | '/membership'
    | '/profile'
    | '/purchase'
    | '/settings'
    | '/transactions'
    | '/vhsopen'
    | '/webhooks'
    | '/'
    | '/admin/accesslogs'
    | '/admin/apikeys'
    | '/admin/dashboard'
    | '/admin/databasebackup'
    | '/admin/email'
    | '/admin/emailtemplates'
    | '/admin/events'
    | '/admin/ipnrecords'
    | '/admin/logs'
    | '/admin/membercards'
    | '/admin/memberships'
    | '/admin/newsletter'
    | '/admin/oauth'
    | '/admin/paymentgateways'
    | '/admin/payments'
    | '/admin/privileges'
    | '/admin/reports'
    | '/admin/siteconfiguration'
    | '/admin/striperecords'
    | '/admin/systemkeys'
    | '/admin/systempreferences'
    | '/admin/transactions'
    | '/admin/users'
    | '/admin/webhooks'
    | '/apikeys/$keyId'
    | '/apikeys/help'
    | '/apikeys/usage'
    | '/user/accesslogs'
    | '/admin'
    | '/admin/memberships/$membershipId'
    | '/admin/systemkeys/help'
    | '/admin/systemkeys/usage'
    | '/admin/users/$userId'
    | '/admin/users/new'
    | '/recovery/reset/$token'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/test'
    | '/backup'
    | '/config'
    | '/events'
    | '/logs'
    | '/oauth'
    | '/fafo'
    | '/login'
    | '/recovery'
    | '/register'
    | '/apikeys'
    | '/dashboard'
    | '/dooraccess'
    | '/getinvolved'
    | '/grants'
    | '/logout'
    | '/membership'
    | '/profile'
    | '/purchase'
    | '/settings'
    | '/transactions'
    | '/vhsopen'
    | '/webhooks'
    | '/'
    | '/admin/accesslogs'
    | '/admin/apikeys'
    | '/admin/dashboard'
    | '/admin/databasebackup'
    | '/admin/email'
    | '/admin/emailtemplates'
    | '/admin/events'
    | '/admin/ipnrecords'
    | '/admin/logs'
    | '/admin/membercards'
    | '/admin/memberships'
    | '/admin/newsletter'
    | '/admin/oauth'
    | '/admin/paymentgateways'
    | '/admin/payments'
    | '/admin/privileges'
    | '/admin/reports'
    | '/admin/siteconfiguration'
    | '/admin/striperecords'
    | '/admin/systemkeys'
    | '/admin/systempreferences'
    | '/admin/transactions'
    | '/admin/users'
    | '/admin/webhooks'
    | '/apikeys/$keyId'
    | '/apikeys/help'
    | '/apikeys/usage'
    | '/user/accesslogs'
    | '/admin'
    | '/admin/memberships/$membershipId'
    | '/admin/systemkeys/help'
    | '/admin/systemkeys/usage'
    | '/admin/users/$userId'
    | '/admin/users/new'
    | '/recovery/reset/$token'
  id:
    | '__root__'
    | '/_admin'
    | '/_public'
    | '/_user'
    | '/test'
    | '/_admin/backup'
    | '/_admin/config'
    | '/_admin/events'
    | '/_admin/logs'
    | '/_admin/oauth'
    | '/_public/fafo'
    | '/_public/login'
    | '/_public/recovery'
    | '/_public/register'
    | '/_user/apikeys'
    | '/_user/dashboard'
    | '/_user/dooraccess'
    | '/_user/getinvolved'
    | '/_user/grants'
    | '/_user/logout'
    | '/_user/membership'
    | '/_user/profile'
    | '/_user/purchase'
    | '/_user/settings'
    | '/_user/transactions'
    | '/_user/vhsopen'
    | '/_user/webhooks'
    | '/_user/'
    | '/_admin/admin/accesslogs'
    | '/_admin/admin/apikeys'
    | '/_admin/admin/dashboard'
    | '/_admin/admin/databasebackup'
    | '/_admin/admin/email'
    | '/_admin/admin/emailtemplates'
    | '/_admin/admin/events'
    | '/_admin/admin/ipnrecords'
    | '/_admin/admin/logs'
    | '/_admin/admin/membercards'
    | '/_admin/admin/memberships'
    | '/_admin/admin/newsletter'
    | '/_admin/admin/oauth'
    | '/_admin/admin/paymentgateways'
    | '/_admin/admin/payments'
    | '/_admin/admin/privileges'
    | '/_admin/admin/reports'
    | '/_admin/admin/siteconfiguration'
    | '/_admin/admin/striperecords'
    | '/_admin/admin/systemkeys'
    | '/_admin/admin/systempreferences'
    | '/_admin/admin/transactions'
    | '/_admin/admin/users'
    | '/_admin/admin/webhooks'
    | '/_user/apikeys/$keyId'
    | '/_user/apikeys/help'
    | '/_user/apikeys/usage'
    | '/_user/user/accesslogs'
    | '/_admin/admin/'
    | '/_admin/admin/memberships/$membershipId'
    | '/_admin/admin/systemkeys/help'
    | '/_admin/admin/systemkeys/usage'
    | '/_admin/admin/users/$userId'
    | '/_admin/admin/users/new'
    | '/_public/recovery/reset/$token'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AdminRoute: typeof AdminRouteWithChildren
  PublicRoute: typeof PublicRouteWithChildren
  UserRoute: typeof UserRouteWithChildren
  TestRoute: typeof TestRoute
}

const rootRouteChildren: RootRouteChildren = {
  AdminRoute: AdminRouteWithChildren,
  PublicRoute: PublicRouteWithChildren,
  UserRoute: UserRouteWithChildren,
  TestRoute: TestRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_admin",
        "/_public",
        "/_user",
        "/test"
      ]
    },
    "/_admin": {
      "filePath": "_admin.tsx",
      "children": [
        "/_admin/backup",
        "/_admin/config",
        "/_admin/events",
        "/_admin/logs",
        "/_admin/oauth",
        "/_admin/admin/accesslogs",
        "/_admin/admin/apikeys",
        "/_admin/admin/dashboard",
        "/_admin/admin/databasebackup",
        "/_admin/admin/email",
        "/_admin/admin/emailtemplates",
        "/_admin/admin/events",
        "/_admin/admin/ipnrecords",
        "/_admin/admin/logs",
        "/_admin/admin/membercards",
        "/_admin/admin/memberships",
        "/_admin/admin/newsletter",
        "/_admin/admin/oauth",
        "/_admin/admin/paymentgateways",
        "/_admin/admin/payments",
        "/_admin/admin/privileges",
        "/_admin/admin/reports",
        "/_admin/admin/siteconfiguration",
        "/_admin/admin/striperecords",
        "/_admin/admin/systemkeys",
        "/_admin/admin/systempreferences",
        "/_admin/admin/transactions",
        "/_admin/admin/users",
        "/_admin/admin/webhooks",
        "/_admin/admin/"
      ]
    },
    "/_public": {
      "filePath": "_public.tsx",
      "children": [
        "/_public/fafo",
        "/_public/login",
        "/_public/recovery",
        "/_public/register"
      ]
    },
    "/_user": {
      "filePath": "_user.tsx",
      "children": [
        "/_user/apikeys",
        "/_user/dashboard",
        "/_user/dooraccess",
        "/_user/getinvolved",
        "/_user/grants",
        "/_user/logout",
        "/_user/membership",
        "/_user/profile",
        "/_user/purchase",
        "/_user/settings",
        "/_user/transactions",
        "/_user/vhsopen",
        "/_user/webhooks",
        "/_user/",
        "/_user/user/accesslogs"
      ]
    },
    "/test": {
      "filePath": "test.tsx"
    },
    "/_admin/backup": {
      "filePath": "_admin/backup.tsx",
      "parent": "/_admin"
    },
    "/_admin/config": {
      "filePath": "_admin/config.tsx",
      "parent": "/_admin"
    },
    "/_admin/events": {
      "filePath": "_admin/events.tsx",
      "parent": "/_admin"
    },
    "/_admin/logs": {
      "filePath": "_admin/logs.tsx",
      "parent": "/_admin"
    },
    "/_admin/oauth": {
      "filePath": "_admin/oauth.tsx",
      "parent": "/_admin"
    },
    "/_public/fafo": {
      "filePath": "_public/fafo.tsx",
      "parent": "/_public"
    },
    "/_public/login": {
      "filePath": "_public/login.tsx",
      "parent": "/_public"
    },
    "/_public/recovery": {
      "filePath": "_public/recovery.tsx",
      "parent": "/_public",
      "children": [
        "/_public/recovery/reset/$token"
      ]
    },
    "/_public/register": {
      "filePath": "_public/register.tsx",
      "parent": "/_public"
    },
    "/_user/apikeys": {
      "filePath": "_user/apikeys.tsx",
      "parent": "/_user",
      "children": [
        "/_user/apikeys/$keyId",
        "/_user/apikeys/help",
        "/_user/apikeys/usage"
      ]
    },
    "/_user/dashboard": {
      "filePath": "_user/dashboard.tsx",
      "parent": "/_user"
    },
    "/_user/dooraccess": {
      "filePath": "_user/dooraccess.tsx",
      "parent": "/_user"
    },
    "/_user/getinvolved": {
      "filePath": "_user/getinvolved.tsx",
      "parent": "/_user"
    },
    "/_user/grants": {
      "filePath": "_user/grants.tsx",
      "parent": "/_user"
    },
    "/_user/logout": {
      "filePath": "_user/logout.tsx",
      "parent": "/_user"
    },
    "/_user/membership": {
      "filePath": "_user/membership.tsx",
      "parent": "/_user"
    },
    "/_user/profile": {
      "filePath": "_user/profile.tsx",
      "parent": "/_user"
    },
    "/_user/purchase": {
      "filePath": "_user/purchase.tsx",
      "parent": "/_user"
    },
    "/_user/settings": {
      "filePath": "_user/settings.tsx",
      "parent": "/_user"
    },
    "/_user/transactions": {
      "filePath": "_user/transactions.tsx",
      "parent": "/_user"
    },
    "/_user/vhsopen": {
      "filePath": "_user/vhsopen.tsx",
      "parent": "/_user"
    },
    "/_user/webhooks": {
      "filePath": "_user/webhooks.tsx",
      "parent": "/_user"
    },
    "/_user/": {
      "filePath": "_user/index.tsx",
      "parent": "/_user"
    },
    "/_admin/admin/accesslogs": {
      "filePath": "_admin/admin.accesslogs.tsx",
      "parent": "/_admin"
    },
    "/_admin/admin/apikeys": {
      "filePath": "_admin/admin.apikeys.tsx",
      "parent": "/_admin"
    },
    "/_admin/admin/dashboard": {
      "filePath": "_admin/admin.dashboard.tsx",
      "parent": "/_admin"
    },
    "/_admin/admin/databasebackup": {
      "filePath": "_admin/admin.databasebackup.tsx",
      "parent": "/_admin"
    },
    "/_admin/admin/email": {
      "filePath": "_admin/admin.email.tsx",
      "parent": "/_admin"
    },
    "/_admin/admin/emailtemplates": {
      "filePath": "_admin/admin.emailtemplates.tsx",
      "parent": "/_admin"
    },
    "/_admin/admin/events": {
      "filePath": "_admin/admin.events.tsx",
      "parent": "/_admin"
    },
    "/_admin/admin/ipnrecords": {
      "filePath": "_admin/admin.ipnrecords.tsx",
      "parent": "/_admin"
    },
    "/_admin/admin/logs": {
      "filePath": "_admin/admin.logs.tsx",
      "parent": "/_admin"
    },
    "/_admin/admin/membercards": {
      "filePath": "_admin/admin.membercards.tsx",
      "parent": "/_admin"
    },
    "/_admin/admin/memberships": {
      "filePath": "_admin/admin.memberships.tsx",
      "parent": "/_admin",
      "children": [
        "/_admin/admin/memberships/$membershipId"
      ]
    },
    "/_admin/admin/newsletter": {
      "filePath": "_admin/admin.newsletter.tsx",
      "parent": "/_admin"
    },
    "/_admin/admin/oauth": {
      "filePath": "_admin/admin.oauth.tsx",
      "parent": "/_admin"
    },
    "/_admin/admin/paymentgateways": {
      "filePath": "_admin/admin.paymentgateways.tsx",
      "parent": "/_admin"
    },
    "/_admin/admin/payments": {
      "filePath": "_admin/admin.payments.tsx",
      "parent": "/_admin"
    },
    "/_admin/admin/privileges": {
      "filePath": "_admin/admin.privileges.tsx",
      "parent": "/_admin"
    },
    "/_admin/admin/reports": {
      "filePath": "_admin/admin.reports.tsx",
      "parent": "/_admin"
    },
    "/_admin/admin/siteconfiguration": {
      "filePath": "_admin/admin.siteconfiguration.tsx",
      "parent": "/_admin"
    },
    "/_admin/admin/striperecords": {
      "filePath": "_admin/admin.striperecords.tsx",
      "parent": "/_admin"
    },
    "/_admin/admin/systemkeys": {
      "filePath": "_admin/admin.systemkeys.tsx",
      "parent": "/_admin",
      "children": [
        "/_admin/admin/systemkeys/help",
        "/_admin/admin/systemkeys/usage"
      ]
    },
    "/_admin/admin/systempreferences": {
      "filePath": "_admin/admin.systempreferences.tsx",
      "parent": "/_admin"
    },
    "/_admin/admin/transactions": {
      "filePath": "_admin/admin.transactions.tsx",
      "parent": "/_admin"
    },
    "/_admin/admin/users": {
      "filePath": "_admin/admin.users.tsx",
      "parent": "/_admin",
      "children": [
        "/_admin/admin/users/$userId",
        "/_admin/admin/users/new"
      ]
    },
    "/_admin/admin/webhooks": {
      "filePath": "_admin/admin.webhooks.tsx",
      "parent": "/_admin"
    },
    "/_user/apikeys/$keyId": {
      "filePath": "_user/apikeys.$keyId.tsx",
      "parent": "/_user/apikeys"
    },
    "/_user/apikeys/help": {
      "filePath": "_user/apikeys.help.tsx",
      "parent": "/_user/apikeys"
    },
    "/_user/apikeys/usage": {
      "filePath": "_user/apikeys.usage.tsx",
      "parent": "/_user/apikeys"
    },
    "/_user/user/accesslogs": {
      "filePath": "_user/user.accesslogs.tsx",
      "parent": "/_user"
    },
    "/_admin/admin/": {
      "filePath": "_admin/admin.index.tsx",
      "parent": "/_admin"
    },
    "/_admin/admin/memberships/$membershipId": {
      "filePath": "_admin/admin.memberships.$membershipId.tsx",
      "parent": "/_admin/admin/memberships"
    },
    "/_admin/admin/systemkeys/help": {
      "filePath": "_admin/admin.systemkeys.help.tsx",
      "parent": "/_admin/admin/systemkeys"
    },
    "/_admin/admin/systemkeys/usage": {
      "filePath": "_admin/admin.systemkeys.usage.tsx",
      "parent": "/_admin/admin/systemkeys"
    },
    "/_admin/admin/users/$userId": {
      "filePath": "_admin/admin.users.$userId.tsx",
      "parent": "/_admin/admin/users"
    },
    "/_admin/admin/users/new": {
      "filePath": "_admin/admin.users.new.tsx",
      "parent": "/_admin/admin/users"
    },
    "/_public/recovery/reset/$token": {
      "filePath": "_public/recovery.reset.$token.tsx",
      "parent": "/_public/recovery"
    }
  }
}
ROUTE_MANIFEST_END */
